# SPDX-FileCopyrightText: 2022 SAP SE or an SAP affiliate company and Gardener contributors
#
# SPDX-License-Identifier: Apache-2.0

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- if gt (int .Values.replicaCount) 1 }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - {{ include "name" . }}
              - key: app.kubernetes.io/instance
                operator: In
                values:
                - {{ .Release.Name }}
            topologyKey: "kubernetes.io/hostname"
      {{- end }}
      serviceAccountName: {{ include "name" . }}
      automountServiceAccountToken: {{ .Values.automountServiceAccountToken }}
      containers:
      - name: {{ include "name" . }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args:
        {{- if or ( or .Values.gardenerManagedDNS.enabled ( eq .Values.serviceType "LoadBalancer" ) ) .Values.tlsConfig.enabled }}
        - --cert-file=/var/run/issuer-discovery/tls/tls.crt
        - --key-file=/var/run/issuer-discovery/tls/tls.key
        {{- end }}
        {{- if .Values.kubeconfig }}
        - --kubeconfig=/var/run/issuer-discovery/kubeconfig/kubeconfig
        {{- end }}
        - --hostname={{ required ".Values.hostname is required" .Values.hostname }}
        - --port=10443
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10443
            {{- if or ( or .Values.gardenerManagedDNS.enabled ( eq .Values.serviceType "LoadBalancer" ) ) .Values.tlsConfig.enabled }}
            scheme: HTTPS
            {{- else }}
            scheme: HTTP
            {{- end }}
          initialDelaySeconds: 10
          periodSeconds: 20
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        {{- if or ( or .Values.gardenerManagedDNS.enabled ( eq .Values.serviceType "LoadBalancer" ) ) .Values.tlsConfig.enabled }}
        volumeMounts:
        {{- else if or ( or .Values.kubeconfig .Values.serviceAccountTokenVolumeProjection.enabled ) .Values.automountKubeRootCA }}
        volumeMounts:
        {{- end }}
        {{- if or ( or .Values.gardenerManagedDNS.enabled ( eq .Values.serviceType "LoadBalancer" ) ) .Values.tlsConfig.enabled }}
        - name: tls
          mountPath: /var/run/issuer-discovery/tls
          readOnly: true
        {{- end }}
        {{- if .Values.kubeconfig }}
        - name: kubeconfig
          mountPath: /var/run/issuer-discovery/kubeconfig
          readOnly: true
        {{- end }}
        {{- if .Values.serviceAccountTokenVolumeProjection.enabled }}
        - name: service-account-token
          mountPath: /var/run/issuer-discovery/serviceaccount
          readOnly: true
        {{- end }}
        {{- if .Values.automountKubeRootCA }}
        - name: kube-root-ca
          mountPath: /var/run/issuer-discovery/kube-root-ca
          readOnly: true
        {{- end }}
      {{- if or ( or .Values.gardenerManagedDNS.enabled ( eq .Values.serviceType "LoadBalancer" ) ) .Values.tlsConfig.enabled }}
      volumes:
      {{- else if or ( or .Values.kubeconfig .Values.serviceAccountTokenVolumeProjection.enabled ) .Values.automountKubeRootCA }}
      volumes:
      {{- end }}
      {{- if or ( or .Values.gardenerManagedDNS.enabled ( eq .Values.serviceType "LoadBalancer" ) ) .Values.tlsConfig.enabled }}
      - name: tls
        projected:
          sources:
          - secret:
              name: {{ include "name" . }}-tls
      {{- end }}
      {{- if .Values.kubeconfig }}
      - name: kubeconfig
        secret:
          secretName: {{ include "name" . }}-kubeconfig
      {{- end }}
      {{- if .Values.serviceAccountTokenVolumeProjection.enabled }}
      - name: service-account-token
        projected:
          sources:
          - serviceAccountToken:
              path: token
              {{- if .Values.serviceAccountTokenVolumeProjection.expirationSeconds }}
              expirationSeconds: {{ .Values.serviceAccountTokenVolumeProjection.expirationSeconds }}
              {{- else }}
              expirationSeconds: 1800
              {{- end }}
              {{- if .Values.serviceAccountTokenVolumeProjection.audience }}
              audience: {{ .Values.serviceAccountTokenVolumeProjection.audience }}
              {{- end }}
      {{- end }}
      {{- if .Values.automountKubeRootCA }}
      - name: kube-root-ca
        projected:
          sources:
          - configMap:
              name: kube-root-ca.crt
      {{- end }}
